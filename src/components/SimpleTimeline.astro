---
import { getCollection } from 'astro:content';

const timelineEntries = await getCollection('timeline');
const sortedEntries = timelineEntries.sort((a, b) => 
  new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
);
---

<section id="timeline" class="relative min-h-screen py-20 bg-slate-950">
  <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-white mb-6">
        Meine <span class="bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">Journey</span>
      </h2>
      <p class="text-xl text-slate-300 max-w-2xl mx-auto">
        Entdecken Sie meine berufliche Laufbahn, Projekte und Meilensteine
      </p>
    </div>

    <div class="space-y-8">
      {sortedEntries.map((entry, index) => (
        <div class="flex items-start space-x-4 group">
          <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-cyan-500 to-purple-500 rounded-full flex items-center justify-center">
            <span class="text-white font-bold">{index + 1}</span>
          </div>
          
          <div class="flex-grow bg-slate-900 rounded-lg p-6 border border-slate-800 hover:border-cyan-500 transition-all duration-300">
            <div class="flex justify-between items-start mb-4">
              <div>
                <h3 class="text-xl font-bold text-white mb-2">{entry.data.title}</h3>
                {entry.data.company && (
                  <p class="text-cyan-400 font-medium">{entry.data.company}</p>
                )}
              </div>
              <span class="text-sm text-slate-400 whitespace-nowrap">
                {entry.data.date.toLocaleDateString('de-DE', { 
                  year: 'numeric', 
                  month: 'long' 
                })}
              </span>
            </div>
            
            <p class="text-slate-300 mb-4">{entry.data.description}</p>
            
            <div class="flex flex-wrap gap-2 mb-4">
              {entry.data.tags.map(tag => (
                <span class="px-2 py-1 bg-slate-800 text-slate-300 text-xs rounded">
                  {tag}
                </span>
              ))}
            </div>
            
            {(entry.data.url || entry.data.externalUrl) && (
              <div class="flex gap-2">
                {entry.data.url && (
                  <a href={entry.data.url} class="text-cyan-400 hover:text-cyan-300 text-sm">
                    Mehr lesen →
                  </a>
                )}
                {entry.data.externalUrl && (
                  <a href={entry.data.externalUrl} target="_blank" rel="noopener noreferrer" class="text-purple-400 hover:text-purple-300 text-sm">
                    Externer Link →
                  </a>
                )}
              </div>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</section> 